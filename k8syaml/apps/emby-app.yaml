apiVersion: apps/v1
kind: Deployment
metadata:
  name: emby
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: emby
      app.kubernetes.io/name: emby
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: emby
        app.kubernetes.io/name: emby
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: TZ
          value: UTC
        image: zishuo/embyserver:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8096
          timeoutSeconds: 1
        name: emby
        env:
        - name: UID
          value: "1000"  # 设置运行 emby 的 UID
        - name: GID
          value: "1000"  # 设置运行 emby 的 GID
        - name: GIDLIST
          value: "1000"  # 额外的 GID 列表
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        - containerPort: 8920
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8096
          timeoutSeconds: 1
        resources: {}
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 8096
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /media
          name: media
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
      - args:
        - -c
        - chown -R  1000:1000 /config && chown -R  1000:1000 /media && chmod -R a+x /media
        command:
        - /bin/sh
        image: centos
        imagePullPolicy: IfNotPresent
        name: chauth
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /media
          name: media
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: emby-config
      - name: media
        persistentVolumeClaim:
          claimName: emby-media
